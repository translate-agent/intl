// Code generated by "earthly +cldr". DO NOT EDIT.
package intl

import (
  "strings"

  "golang.org/x/text/language"
)

type numberingSystem int

const (
  numberingSystemLatn numberingSystem = iota
{{- range $v := .NumberingSystemIota }}
  {{- if ne $v "latn" }}
  numberingSystem{{ title $v }}
  {{- end }}
{{- end }}
  numberingSystemLast
)

var numberingSystems = []digits{
{{- range $v := .NumberingSystems }}
  {{- if ne $v.ID "latn" }}
  numberingSystem{{ title $v.ID }}: {
    {{- range $char := $v.Digits }}{{ printf "'%c'" $char }},{{- end -}}
    },
  {{- end }}
{{- end }}
}

func defaultNumberingSystem(locale language.Tag) numberingSystem {
  s := locale.String()

  switch {
  default:
    return numberingSystemLatn
{{- range $system, $locales := .DefaultNumberingSystems }}
  case
  {{- range $i, $locale := $locales }}
    {{- if ne $locale "latn" }} s == "{{ $locale }}", strings.HasPrefix(s, "{{ $locale }}-"){{ if lt $i (sub (len $locales) 1) }},{{ end }}
    {{- end }}
  {{- end }}:
    return numberingSystem{{ title $system }}
{{- end }}
  }
}

func defaultCalendar(locale language.Tag) string {
  switch v, _ := locale.Region(); v.String() {
  default:
    return "gregorian"
{{- range $v := .CalendarPreferences }}
  {{- if ne (index $v.Calendars 0) "gregorian" }}
  case "{{ join $v.Regions "\", \"" }}":
    return "{{ index $v.Calendars 0 }}"
  {{- end }}
{{- end }}
  }
}

func fmtYear(y string, locale language.Tag) string {
  lang, _ := locale.Base()

  switch lang.String() {
  default:
    return y
{{- range $fmt, $languages := .DateTimeFormats.Y }}
  case "{{ join $languages "\", \"" }}":
    return {{ $fmt }}
{{- end }}
  }
}