package cldr

import (
	"golang.org/x/text/language"
)

// Languages.
var (
	AF  = language.MustParseBase("af")
	AGQ = language.MustParseBase("agq")
	AK  = language.MustParseBase("ak")
	AM  = language.MustParseBase("am")
	AR  = language.MustParseBase("ar")
	AS  = language.MustParseBase("as")
	ASA = language.MustParseBase("asa")
	AST = language.MustParseBase("ast")
	AZ  = language.MustParseBase("az")
	BAS = language.MustParseBase("bas")
	BE  = language.MustParseBase("be")
	BEM = language.MustParseBase("bem")
	BEZ = language.MustParseBase("bez")
	BG  = language.MustParseBase("bg")
	BGC = language.MustParseBase("bgc")
	BGN = language.MustParseBase("bgn")
	BHO = language.MustParseBase("bho")
	BLO = language.MustParseBase("blo")
	BM  = language.MustParseBase("bm")
	BN  = language.MustParseBase("bn")
	BO  = language.MustParseBase("bo")
	BR  = language.MustParseBase("br")
	BRX = language.MustParseBase("brx")
	BS  = language.MustParseBase("bs")
	CA  = language.MustParseBase("ca")
	CCP = language.MustParseBase("ccp")
	CE  = language.MustParseBase("ce")
	CEB = language.MustParseBase("ceb")
	CGG = language.MustParseBase("cgg")
	CHR = language.MustParseBase("chr")
	CKB = language.MustParseBase("ckb")
	CS  = language.MustParseBase("cs")
	CSW = language.MustParseBase("csw")
	CV  = language.MustParseBase("cv")
	CY  = language.MustParseBase("cy")
	DA  = language.MustParseBase("da")
	DAV = language.MustParseBase("dav")
	DE  = language.MustParseBase("de")
	DJE = language.MustParseBase("dje")
	DOI = language.MustParseBase("doi")
	DSB = language.MustParseBase("dsb")
	DUA = language.MustParseBase("dua")
	DYO = language.MustParseBase("dyo")
	DZ  = language.MustParseBase("dz")
	EBU = language.MustParseBase("ebu")
	EE  = language.MustParseBase("ee")
	EL  = language.MustParseBase("el")
	EN  = language.MustParseBase("en")
	EO  = language.MustParseBase("eo")
	ES  = language.MustParseBase("es")
	ET  = language.MustParseBase("et")
	EU  = language.MustParseBase("eu")
	EWO = language.MustParseBase("ewo")
	FA  = language.MustParseBase("fa")
	FF  = language.MustParseBase("ff")
	FI  = language.MustParseBase("fi")
	FIL = language.MustParseBase("fil")
	FO  = language.MustParseBase("fo")
	FR  = language.MustParseBase("fr")
	FUR = language.MustParseBase("fur")
	FY  = language.MustParseBase("fy")
	GA  = language.MustParseBase("ga")
	GAA = language.MustParseBase("gaa")
	GD  = language.MustParseBase("gd")
	GL  = language.MustParseBase("gl")
	GSW = language.MustParseBase("gsw")
	GU  = language.MustParseBase("gu")
	GUZ = language.MustParseBase("guz")
	GV  = language.MustParseBase("gv")
	HA  = language.MustParseBase("ha")
	HAW = language.MustParseBase("haw")
	HE  = language.MustParseBase("he")
	HI  = language.MustParseBase("hi")
	HNJ = language.MustParseBase("hnj")
	HR  = language.MustParseBase("hr")
	HSB = language.MustParseBase("hsb")
	HU  = language.MustParseBase("hu")
	HY  = language.MustParseBase("hy")
	IA  = language.MustParseBase("ia")
	ID  = language.MustParseBase("id")
	IE  = language.MustParseBase("ie")
	IG  = language.MustParseBase("ig")
	II  = language.MustParseBase("ii")
	IS  = language.MustParseBase("is")
	IT  = language.MustParseBase("it")
	IU  = language.MustParseBase("iu")
	JA  = language.MustParseBase("ja")
	JGO = language.MustParseBase("jgo")
	JMC = language.MustParseBase("jmc")
	JV  = language.MustParseBase("jv")
	KA  = language.MustParseBase("ka")
	KAA = language.MustParseBase("kaa")
	KAB = language.MustParseBase("kab")
	KAM = language.MustParseBase("kam")
	KDE = language.MustParseBase("kde")
	KEA = language.MustParseBase("kea")
	KGP = language.MustParseBase("kgp")
	KHQ = language.MustParseBase("khq")
	KI  = language.MustParseBase("ki")
	KK  = language.MustParseBase("kk")
	KL  = language.MustParseBase("kl")
	KKJ = language.MustParseBase("kkj")
	KLN = language.MustParseBase("kln")
	KM  = language.MustParseBase("km")
	KN  = language.MustParseBase("kn")
	KO  = language.MustParseBase("ko")
	KOK = language.MustParseBase("kok")
	KS  = language.MustParseBase("ks")
	KSB = language.MustParseBase("ksb")
	KSF = language.MustParseBase("ksf")
	KSH = language.MustParseBase("ksh")
	KU  = language.MustParseBase("ku")
	KW  = language.MustParseBase("kw")
	KXV = language.MustParseBase("kxv")
	KY  = language.MustParseBase("ky")
	LAG = language.MustParseBase("lag")
	LB  = language.MustParseBase("lb")
	LG  = language.MustParseBase("lg")
	LIJ = language.MustParseBase("lij")
	LKT = language.MustParseBase("lkt")
	LMO = language.MustParseBase("lmo")
	LN  = language.MustParseBase("ln")
	LO  = language.MustParseBase("lo")
	LRC = language.MustParseBase("lrc")
	LT  = language.MustParseBase("lt")
	LU  = language.MustParseBase("lu")
	LUO = language.MustParseBase("luo")
	LUY = language.MustParseBase("luy")
	LV  = language.MustParseBase("lv")
	MAI = language.MustParseBase("mai")
	MAS = language.MustParseBase("mas")
	MER = language.MustParseBase("mer")
	MFE = language.MustParseBase("mfe")
	MG  = language.MustParseBase("mg")
	MGH = language.MustParseBase("mgh")
	MGO = language.MustParseBase("mgo")
	MHN = language.MustParseBase("mhn")
	MI  = language.MustParseBase("mi")
	MK  = language.MustParseBase("mk")
	ML  = language.MustParseBase("ml")
	MN  = language.MustParseBase("mn")
	MNI = language.MustParseBase("mni")
	MR  = language.MustParseBase("mr")
	MS  = language.MustParseBase("ms")
	MT  = language.MustParseBase("mt")
	MUA = language.MustParseBase("mua")
	MY  = language.MustParseBase("my")
	MZN = language.MustParseBase("mzn")
	NAQ = language.MustParseBase("naq")
	NB  = language.MustParseBase("nb")
	ND  = language.MustParseBase("nd")
	NDS = language.MustParseBase("nds")
	NE  = language.MustParseBase("ne")
	NL  = language.MustParseBase("nl")
	NMG = language.MustParseBase("nmg")
	NN  = language.MustParseBase("nn")
	NNH = language.MustParseBase("nnh")
	NO  = language.MustParseBase("no")
	NQO = language.MustParseBase("nqo")
	NSO = language.MustParseBase("nso")
	NUS = language.MustParseBase("nus")
	NYN = language.MustParseBase("nyn")
	OC  = language.MustParseBase("oc")
	OM  = language.MustParseBase("om")
	OR  = language.MustParseBase("or")
	OS  = language.MustParseBase("os")
	PA  = language.MustParseBase("pa")
	PCM = language.MustParseBase("pcm")
	PL  = language.MustParseBase("pl")
	PRG = language.MustParseBase("prg")
	PS  = language.MustParseBase("ps")
	PT  = language.MustParseBase("pt")
	QU  = language.MustParseBase("qu")
	RAJ = language.MustParseBase("raj")
	RM  = language.MustParseBase("rm")
	RN  = language.MustParseBase("rn")
	RO  = language.MustParseBase("ro")
	ROF = language.MustParseBase("rof")
	RU  = language.MustParseBase("ru")
	RW  = language.MustParseBase("rw")
	RWK = language.MustParseBase("rwk")
	SA  = language.MustParseBase("sa")
	SAH = language.MustParseBase("sah")
	SAQ = language.MustParseBase("saq")
	SAT = language.MustParseBase("sat")
	SBP = language.MustParseBase("sbp")
	SC  = language.MustParseBase("sc")
	SD  = language.MustParseBase("sd")
	SDH = language.MustParseBase("sdh")
	SE  = language.MustParseBase("se")
	SEH = language.MustParseBase("seh")
	SES = language.MustParseBase("ses")
	SG  = language.MustParseBase("sg")
	SHI = language.MustParseBase("shi")
	SI  = language.MustParseBase("si")
	SK  = language.MustParseBase("sk")
	SL  = language.MustParseBase("sl")
	SMN = language.MustParseBase("smn")
	SN  = language.MustParseBase("sn")
	SO  = language.MustParseBase("so")
	SQ  = language.MustParseBase("sq")
	SR  = language.MustParseBase("sr")
	ST  = language.MustParseBase("st")
	SU  = language.MustParseBase("su")
	SV  = language.MustParseBase("sv")
	SW  = language.MustParseBase("sw")
	SYR = language.MustParseBase("syr")
	SZL = language.MustParseBase("szl")
	TA  = language.MustParseBase("ta")
	TE  = language.MustParseBase("te")
	TEO = language.MustParseBase("teo")
	TG  = language.MustParseBase("tg")
	TH  = language.MustParseBase("th")
	TI  = language.MustParseBase("ti")
	TK  = language.MustParseBase("tk")
	TN  = language.MustParseBase("tn")
	TO  = language.MustParseBase("to")
	TOK = language.MustParseBase("tok")
	TR  = language.MustParseBase("tr")
	TT  = language.MustParseBase("tt")
	TWQ = language.MustParseBase("twq")
	TZM = language.MustParseBase("tzm")
	UG  = language.MustParseBase("ug")
	UK  = language.MustParseBase("uk")
	UR  = language.MustParseBase("ur")
	UZ  = language.MustParseBase("uz")
	VAI = language.MustParseBase("vai")
	VEC = language.MustParseBase("vec")
	VI  = language.MustParseBase("vi")
	VMW = language.MustParseBase("vmw")
	VUN = language.MustParseBase("vun")
	WAE = language.MustParseBase("wae")
	WO  = language.MustParseBase("wo")
	XH  = language.MustParseBase("xh")
	XNR = language.MustParseBase("xnr")
	XOG = language.MustParseBase("xog")
	YAV = language.MustParseBase("yav")
	YI  = language.MustParseBase("yi")
	YO  = language.MustParseBase("yo")
	YRL = language.MustParseBase("yrl")
	YUE = language.MustParseBase("yue")
	ZA  = language.MustParseBase("za")
	ZGH = language.MustParseBase("zgh")
	ZH  = language.MustParseBase("zh")
	ZU  = language.MustParseBase("zu")
)

// Scripts.
var (
	Adlm = language.MustParseScript("Adlm")
	Arab = language.MustParseScript("Arab")
	Cyrl = language.MustParseScript("Cyrl")
	Deva = language.MustParseScript("Deva")
	Dsrt = language.MustParseScript("Dsrt")
	Hans = language.MustParseScript("Hans")
	Hant = language.MustParseScript("Hant")
	Latn = language.MustParseScript("Latn")
	Orya = language.MustParseScript("Orya")
	Shaw = language.MustParseScript("Shaw")
	Telu = language.MustParseScript("Telu")
)

// Regions.
//
// TODO(jhorsts): temporary disable linter "unused". TIDY before release v0.1.0.
var (
	Region001 = language.MustParseRegion("001")
	Region150 = language.MustParseRegion("150")
	RegionAE  = language.MustParseRegion("AE")
	RegionAF  = language.MustParseRegion("AF")
	RegionAG  = language.MustParseRegion("AG")
	RegionAI  = language.MustParseRegion("AI")
	RegionAR  = language.MustParseRegion("AR")
	RegionAS  = language.MustParseRegion("AS")
	RegionAT  = language.MustParseRegion("AT")
	RegionAU  = language.MustParseRegion("AU")
	RegionBA  = language.MustParseRegion("BA")
	RegionBB  = language.MustParseRegion("BB")
	RegionBE  = language.MustParseRegion("BE")
	RegionBI  = language.MustParseRegion("BI")
	RegionBM  = language.MustParseRegion("BM")
	RegionBS  = language.MustParseRegion("BS")
	RegionBW  = language.MustParseRegion("BW")
	RegionBZ  = language.MustParseRegion("BZ")
	RegionCA  = language.MustParseRegion("CA")
	RegionCC  = language.MustParseRegion("CC")
	RegionCH  = language.MustParseRegion("CH")
	RegionCK  = language.MustParseRegion("CK")
	RegionCL  = language.MustParseRegion("CL")
	RegionCM  = language.MustParseRegion("CM")
	RegionCO  = language.MustParseRegion("CO")
	RegionCX  = language.MustParseRegion("CX")
	RegionCY  = language.MustParseRegion("CY")
	RegionDE  = language.MustParseRegion("DE")
	RegionDG  = language.MustParseRegion("DG")
	RegionDK  = language.MustParseRegion("DK")
	RegionDM  = language.MustParseRegion("DM")
	RegionDZ  = language.MustParseRegion("DZ")
	RegionEH  = language.MustParseRegion("EH")
	RegionER  = language.MustParseRegion("ER")
	RegionFI  = language.MustParseRegion("FI")
	RegionFJ  = language.MustParseRegion("FJ")
	RegionFK  = language.MustParseRegion("FK")
	RegionFM  = language.MustParseRegion("FM")
	RegionGB  = language.MustParseRegion("GB")
	RegionGD  = language.MustParseRegion("GD")
	RegionGG  = language.MustParseRegion("GG")
	RegionGH  = language.MustParseRegion("GH")
	RegionGI  = language.MustParseRegion("GI")
	RegionGM  = language.MustParseRegion("GM")
	RegionGU  = language.MustParseRegion("GU")
	RegionGY  = language.MustParseRegion("GY")
	RegionHK  = language.MustParseRegion("HK")
	RegionID  = language.MustParseRegion("ID")
	RegionIE  = language.MustParseRegion("IE")
	RegionIL  = language.MustParseRegion("IL")
	RegionIM  = language.MustParseRegion("IM")
	RegionIN  = language.MustParseRegion("IN")
	RegionIO  = language.MustParseRegion("IO")
	RegionIQ  = language.MustParseRegion("IQ")
	RegionIR  = language.MustParseRegion("IR")
	RegionJE  = language.MustParseRegion("JE")
	RegionJM  = language.MustParseRegion("JM")
	RegionKE  = language.MustParseRegion("KE")
	RegionKI  = language.MustParseRegion("KI")
	RegionKN  = language.MustParseRegion("KN")
	RegionKY  = language.MustParseRegion("KY")
	RegionLC  = language.MustParseRegion("LC")
	RegionLR  = language.MustParseRegion("LR")
	RegionLS  = language.MustParseRegion("LS")
	RegionLY  = language.MustParseRegion("LY")
	RegionMA  = language.MustParseRegion("MA")
	RegionMG  = language.MustParseRegion("MG")
	RegionMH  = language.MustParseRegion("MH")
	RegionMO  = language.MustParseRegion("MO")
	RegionMP  = language.MustParseRegion("MP")
	RegionMS  = language.MustParseRegion("MS")
	RegionMT  = language.MustParseRegion("MT")
	RegionMU  = language.MustParseRegion("MU")
	RegionMV  = language.MustParseRegion("MV")
	RegionMW  = language.MustParseRegion("MW")
	RegionMX  = language.MustParseRegion("MX")
	RegionMY  = language.MustParseRegion("MY")
	RegionNA  = language.MustParseRegion("NA")
	RegionNF  = language.MustParseRegion("NF")
	RegionNG  = language.MustParseRegion("NG")
	RegionNL  = language.MustParseRegion("NL")
	RegionNR  = language.MustParseRegion("NR")
	RegionNU  = language.MustParseRegion("NU")
	RegionNZ  = language.MustParseRegion("NZ")
	RegionPA  = language.MustParseRegion("PA")
	RegionPG  = language.MustParseRegion("PG")
	RegionPH  = language.MustParseRegion("PH")
	RegionPK  = language.MustParseRegion("PK")
	RegionPN  = language.MustParseRegion("PN")
	RegionPR  = language.MustParseRegion("PR")
	RegionPW  = language.MustParseRegion("PW")
	RegionRW  = language.MustParseRegion("RW")
	RegionSA  = language.MustParseRegion("SA")
	RegionSB  = language.MustParseRegion("SB")
	RegionSC  = language.MustParseRegion("SC")
	RegionSD  = language.MustParseRegion("SD")
	RegionSE  = language.MustParseRegion("SE")
	RegionSG  = language.MustParseRegion("SG")
	RegionSH  = language.MustParseRegion("SH")
	RegionSI  = language.MustParseRegion("SI")
	RegionSL  = language.MustParseRegion("SL")
	RegionSS  = language.MustParseRegion("SS")
	RegionSX  = language.MustParseRegion("SX")
	RegionSZ  = language.MustParseRegion("SZ")
	RegionTC  = language.MustParseRegion("TC")
	RegionTH  = language.MustParseRegion("TH")
	RegionTK  = language.MustParseRegion("TK")
	RegionTN  = language.MustParseRegion("TN")
	RegionTO  = language.MustParseRegion("TO")
	RegionTT  = language.MustParseRegion("TT")
	RegionTV  = language.MustParseRegion("TV")
	RegionTZ  = language.MustParseRegion("TZ")
	RegionUG  = language.MustParseRegion("UG")
	RegionUM  = language.MustParseRegion("UM")
	RegionUS  = language.MustParseRegion("US")
	RegionVC  = language.MustParseRegion("VC")
	RegionVG  = language.MustParseRegion("VG")
	RegionVI  = language.MustParseRegion("VI")
	RegionVU  = language.MustParseRegion("VU")
	RegionWS  = language.MustParseRegion("WS")
	RegionZA  = language.MustParseRegion("ZA")
	RegionZM  = language.MustParseRegion("ZM")
	RegionZW  = language.MustParseRegion("ZW")
	RegionZZ  = language.Region{}
)

func DefaultCalendar(locale language.Tag) CalendarType {
	region, _ := locale.Region()

	switch region {
	default:
		return CalendarTypeGregorian
	case RegionAF:
		return CalendarTypePersian
	case RegionIR:
		if lang, _ := locale.Base(); lang == AZ {
			return CalendarTypeGregorian
		}

		return CalendarTypePersian
	case RegionSA:
		return CalendarTypeIslamicUmalqura
	case RegionTH:
		return CalendarTypeBuddhist
	}
}

func UnitName(locale language.Tag) Fields {
	if v, ok := FieldsLookup[locale.String()]; ok {
		return v
	}

	lang, _ := locale.Base()
	s := lang.String()

	if v, confidence := locale.Script(); confidence == language.Exact {
		s += "-" + v.String()

		v, ok := FieldsLookup[s]
		if ok {
			return v
		}
	}

	if v, confidence := locale.Region(); confidence == language.Exact {
		s += "-" + v.String()
	}

	v, ok := FieldsLookup[s]
	if ok {
		return v
	}

	v, ok = FieldsLookup[lang.String()]
	if ok {
		return v
	}

	return Fields{
		Month: "Month",
		Day:   "Day",
	}
}

type CalendarType int

const (
	CalendarTypeGregorian CalendarType = iota
	CalendarTypeBuddhist
	CalendarTypePersian
	CalendarTypeIslamicUmalqura
)

// String implements [fmt.Stringer] interface.
func (t CalendarType) String() string {
	switch t {
	default:
		return "gregorian"
	case CalendarTypeBuddhist:
		return "buddhist"
	case CalendarTypePersian:
		return "persian"
	case CalendarTypeIslamicUmalqura:
		return "islamic-umalqura"
	}
}
